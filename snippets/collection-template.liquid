{%- liquid
  assign per_row = 4
  assign paginate_by = per_row | times: 7

  for block in section.blocks
    case block.type
    when 'product_grid'
      assign per_row = block.settings.per_row
      assign paginate_by = per_row | times: block.settings.rows_per_page
    endcase
  endfor

  assign current_filter_size = 0

  for filter in collection.filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor
-%}

{%- paginate collection.products by paginate_by -%}

{%- for block in section.blocks -%}
  <div {{ block.shopify_attributes }}>
    {%- case block.type -%}
    {%- when 'collection_description' -%}
      {%- if collection.description != blank and current_filter_size == 0 and current_page == 1 -%}
        <div class="rte collection__description">
          {{ collection.description }}
        </div>
      {%- endif -%}
    {%- when 'subcollections' -%}
      {%- if current_filter_size == 0 -%}
        {%- render 'subcollections', per_row: block.settings.subcollections_per_row -%}
      {%- endif -%}
      {%- when 'newsubcols' -%}
        {%- if current_filter_size == 0 -%}
          {%- render 'collection_n_col_related', 
            per_row: block.settings.subcollections_per_row,
            collection_1: block.settings.collection_1,
            title_1: block.settings.title_1,
            content_1: block.settings.content_1,
            icon_1: block.settings.icon_1,
            collection_2: block.settings.collection_2,
            title_2: block.settings.title_2,
            content_2: block.settings.content_2,
            icon_2: block.settings.icon_2
          -%}
        {%- endif -%}
    {%- when 'product_grid' -%}
      <div class="collection-filter">
        {%- liquid
          assign current_filter_size = 0

          for filter in collection.filters
            assign current_filter_size = current_filter_size | plus: filter.active_values.size
          endfor
        -%}
        <div class="collection-filter__item collection-filter__item--drawer">
          <button
            type="button"
            class="js-drawer-open-collection-filters btn btn--tertiary{% unless current_filter_size == 0 %} btn--tertiary-active{% endunless %}"
            aria-controls="FilterDrawer">
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-filter" viewBox="0 0 64 64"><path d="M48 42h10M48 42a5 5 0 1 1-5-5 5 5 0 0 1 5 5zM7 42h31M16 22H6M16 22a5 5 0 1 1 5 5 5 5 0 0 1-5-5zM57 22H26"/></svg>
            {{ 'collections.filters.title_tags' | t }}
            {%- if current_filter_size > 0 -%}
              ({{ current_filter_size }})
            {%- endif -%}
          </button>
        </div>

        <div class="collection-filter__item collection-filter__item--count small--hide">
          {%- if block.settings.enable_collection_count -%}
            {{ 'collections.general.items_with_count' | t: count: collection.products_count }}
          {%- endif -%}
        </div>

        <div class="collection-filter__item collection-filter__item--sort">
          <div class="collection-filter__sort-container">
            {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
            <label for="SortBy" class="hidden-label">{{ 'collections.sorting.title' | t }}</label>
            <select name="SortBy" id="SortBy" data-default-sortby="{{ collection.default_sort_by }}">
              <option value="title-ascending"{% if sort_by == collection.default_sort_by %} selected="selected"{% endif %}>{{ 'collections.sorting.title' | t }}</option>
              {%- for option in collection.sort_options -%}
                <option value="{{ option.value }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name }}</option>
              {%- endfor -%}
            </select>
          </div>
        </div>
      </div>

      {%- if block.settings.enable_collection_count -%}
        <p class="medium-up--hide text-center" data-scroll-to>{{ 'collections.general.items_with_count' | t: count: collection.products_count }}</p>
      {%- endif -%}

      <div
        class="grid grid--uniform{% if block.settings.mobile_flush_grid %} small--grid--flush{% endif %}"{% unless block.settings.enable_collection_count %} data-scroll-to{% endunless %}>
        {%- liquid
          assign grid_item_width = 'small--one-half medium-up--one-third'

          case per_row
            when 2
              assign grid_item_width = 'medium-up--one-half'
            when 3
              assign grid_item_width = 'small--one-half medium-up--one-third'
            when 4
              assign grid_item_width = 'small--one-half medium-up--one-quarter'
            when 5
              assign grid_item_width = 'small--one-half medium-up--one-fifth'
          endcase
        -%}

        {%- for product in collection.products -%}
          {%- render 'product-grid-item',
            product: product,
            grid_item_width: grid_item_width,
            per_row: per_row -%}
        {%- else -%}
          <div class="grid__item">
            <p>{{ 'collections.general.no_matches' | t }}</p>
          </div>
        {%- endfor -%}

      </div>

      {%- if paginate.pages > 1 -%}
        {%- render 'pagination', paginate: paginate -%}
      {%- endif -%}

      {%- if settings.quick_shop_enable -%}
        {%- for product in collection.products -%}
          {%- render 'quick-shop-modal', product: product -%}
        {%- endfor -%}
      {%- endif -%}
    {%- endcase -%}
  </div>
{%- endfor -%}

{%- endpaginate -%}
